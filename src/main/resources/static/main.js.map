{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/edit-product/edit-product.component.ts","./src/app/edit-product/edit-product.component.html","./src/app/new-product/new-product.component.ts","./src/app/new-product/new-product.component.html","./src/app/produits/produits.component.ts","./src/app/produits/produits.component.html","./src/app/services/catalogue.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { EditProductComponent } from './edit-product/edit-product.component';\nimport { NewProductComponent } from './new-product/new-product.component';\nimport { ProduitsComponent } from './produits/produits.component';\nconst routes: Routes = [\n  {\n    path:\"products\", component : ProduitsComponent,\n  },\n  {\n    path:\"new-product\", component : NewProductComponent\n  },\n  {\n    path:\"\",redirectTo:\"/products\",pathMatch:'full'\n  },\n  {\n    path:\"edit-product/:id\", component : EditProductComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'catal-web-v1';\n}\n","<nav class=\"navbar navbar-inverse\">\n  <div class=\"container-fluid\">\n    <div class=\"navbar-header\">\n      <a class=\"navbar-brand\" routerLink=\"/\">WebSiteName</a>\n    </div>\n    <ul class=\"nav navbar-nav\">\n      <li class=\"active\"><a routerLink=\"/\">Home</a></li>\n      <li class=\"dropdown\">\n        <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Produits\n          <span class=\"caret\"></span></a>\n        <ul class=\"dropdown-menu\">\n          <li><a routerLink=\"/products\">Chercher</a></li>\n          <li><a routerLink=\"/new-product\">Ajouter</a></li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n</nav>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ProduitsComponent } from './produits/produits.component';\nimport { NewProductComponent } from './new-product/new-product.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { EditProductComponent } from './edit-product/edit-product.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProduitsComponent,\n    NewProductComponent,\n    EditProductComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Product } from '../model/product.model';\nimport { CatalogueService } from '../services/catalogue.service';\n\n@Component({\n  selector: 'app-edit-product',\n  templateUrl: './edit-product.component.html',\n  styleUrls: ['./edit-product.component.css']\n})\nexport class EditProductComponent implements OnInit {\n  public currentProduct: Product | any;\n  public url: string | any;\n\n  constructor(private router:Router, private activatedRoute:ActivatedRoute,private catService:CatalogueService) { }\n\n  ngOnInit(): void {\n    this.url=atob(this.activatedRoute.snapshot.params[\"id\"]);\n    this.catService.getResource(this.url)\n    .subscribe(data=>{\n      this.currentProduct=data;\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  onUpdateProduct(value:any){\n    this.catService.UpdateResource(this.url,value)\n    .subscribe(data=>{\n      alert(\"Mis à jour effectuée avec succès\");\n      this.router.navigateByUrl(\"/products\");\n    },err=>{\n      console.log(err);\n    })\n\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"panel panel-default\">\n    <div class=\"panel-heading\">Edition du Produit</div>\n    <div class=\"panel-body\" *ngIf=\"currentProduct\">\n      <form #f=\"ngForm\" (ngSubmit)=\"onUpdateProduct(f.value)\">\n        <div class=\"form-group\">\n          <label class=\"control-label\">Désignation</label>\n          <input type=\"text\" class=\"form-control\" name=\"designation\" ngModel [(ngModel)]=\"currentProduct.designation\">\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"control-label\">Quantité</label>\n          <input type=\"number\" class=\"form-control\" name=\"quantite\" ngModel [(ngModel)]=\"currentProduct.quantite\">\n        </div>\n\n        <div class=\"form-group\">\n          <label class=\"control-label\">Prix</label>\n          <input type=\"number\" class=\"form-control\" name=\"price\" ngModel [(ngModel)]=\"currentProduct.price\">\n        </div>\n\n        <button class=\"btn btn-success\" type=\"submit\">Update</button>\n      </form>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Product } from '../model/product.model';\nimport { CatalogueService } from '../services/catalogue.service';\n\n@Component({\n  selector: 'app-new-product',\n  templateUrl: './new-product.component.html',\n  styleUrls: ['./new-product.component.css']\n})\nexport class NewProductComponent implements OnInit {\n\n  public currentProduct : Product | any;\n  public mode : number = 1;\n\n  constructor(private catService:CatalogueService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onSaveProduct(data:any){\n    this.catService.saveResource(this.catService.host+\"/produits\",data)\n    .subscribe(res=>{\n      // this.router.navigateByUrl(\"/products\");\n      this.currentProduct=res;\n      this.mode=2\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  onNewProduct() {\n    this.mode=1;\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"col-md-9 col-sm-6 col-xs-12\">\n    <div class=\"panel panel-default\">\n      <div class=\"panel-heading\">Nouveau produit</div>\n      <div class=\"panel-body\" *ngIf=\"mode==1\">\n        <form #f=\"ngForm\" (ngSubmit)=\"onSaveProduct(f.value)\">\n          <div class=\"form-group\">\n            <label class=\"control-label\">Désignation</label>\n            <input type=\"text\" class=\"form-control\" name=\"designation\" ngModel>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\">Quantité</label>\n            <input type=\"number\" class=\"form-control\" name=\"quantite\" ngModel>\n          </div>\n\n          <div class=\"form-group\">\n            <label class=\"control-label\">Prix</label>\n            <input type=\"number\" class=\"form-control\" name=\"price\" ngModel>\n          </div>\n\n          <button class=\"btn btn-success\" type=\"submit\">Save</button>\n        </form>\n      </div>\n      <div class=\"div panel-body\" *ngIf=\"mode==2\">\n        <button class=\"btn btn-success mb-5\" (click)=\"onNewProduct()\">Nouveau Produit</button>\n        <p></p>\n        <div class=\"form-group\">\n          <label>ID : </label><label> {{ currentProduct.id}}</label>\n        </div>\n        <div class=\"form-group\">\n          <label>Désignation : </label><label> {{ currentProduct.designation}}</label>\n        </div>\n        <div class=\"form-group\">\n          <label>Quantité : </label><label> {{ currentProduct.quantite}}</label>\n        </div>\n        <div class=\"form-group\">\n          <label>Prix : </label><label> {{ currentProduct.price}}</label>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CatalogueService } from '../services/catalogue.service';\n\n@Component({\n  selector: 'app-produits',\n  templateUrl: './produits.component.html',\n  styleUrls: ['./produits.component.css']\n})\nexport class ProduitsComponent implements OnInit {\n\n  public produits:any;\n  public size:number=5;\n  public currentPage:number=0;\n  public totalPages:number | any;\n  public pages:Array<number> |any;\n  public currentkeyword:string=\"\";\n\n\n  constructor(private catService:CatalogueService, private router:Router) { }\n\n  ngOnInit(): void {\n  }\n\n  onGetProducts(){\n    this.catService.getProducts(this.currentPage,this.size)\n    .subscribe(data=>{\n      this.totalPages=(data as any).page.totalPages;\n      this.pages=new Array<number>(this.totalPages);\n      this.produits=data;\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  onPageProduct(i: number){\n    this.currentPage=i;\n    this.ChercherProduits();\n  }\n\n  onChercher(form:any){\n    this.currentPage=0;\n    this.currentkeyword=form.keyword;\n    this.ChercherProduits();\n  }\n\n  ChercherProduits(){\n    this.catService.getProductsByKeyword(this.currentkeyword,this.currentPage,this.size)\n    .subscribe(data=>{\n      this.totalPages=(data as any).page.totalPages;\n      this.pages=new Array<number>(this.totalPages);\n      this.produits=data;\n    },err=>{\n      console.log(err);\n    })\n  }\n\n  onDeleteProduct(p:any){\n    let conf=confirm(\"Êtes-vous sûre?\");\n    if(conf){\n      this.catService.deleteResource(p._links.self.href)\n      .subscribe(data=>{\n        this.ChercherProduits();\n      },err=>{console.log(err);\n      })\n    }\n  }\n\n  onEditProduct(p:any){\n    let url=p._links.self.href\n    this.router.navigateByUrl(\"/edit-product/\"+btoa(url));\n  }\n}\n","<div class=\"container\">\n  <div class=\"panel panel-primary\">\n    <div class=\"panel-heading\">Liste des produits</div>\n    <!-- <div class=\"panel-body\">\n      <button class=\"btn btn-primary\" (click)=\"onGetProducts()\">Produits</button>\n    </div> -->\n    <div class=\"panel-body\">\n      <form #f=\"ngForm\" (ngSubmit)=\"onChercher(f.value)\">\n        <div class=\"form-group\">\n          <label>Keyword : </label>\n          <input type=\"text\" name=\"keyword\" ngModel>\n          <button class=\"mr-2\" type=\"submit\" class=\"btn btn-primary\"><span class=\" glyphicon glyphicon-search \"></span> Chercher</button>\n        </div>\n      </form>\n      <table *ngIf=\"produits\" class=\"table table-striped\">\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>DES</th>\n            <th>PRIX</th>\n            <th>QTE</th>\n            <th>Actions</th>\n          </tr>\n      </thead>\n      <tbody>\n          <tr *ngFor=\"let p of produits._embedded.produits\">\n            <td>{{p.id}}</td>\n            <td>{{p.designation}}</td>\n            <td>{{p.price | number:'0.2'}}</td>\n            <td>{{p.quantite}}</td>\n            <td>\n              <a class=\"btn btn-danger btn-sm\" (click)=\"onDeleteProduct(p)\" >Delete</a>\n              <a class=\"btn btn-warning btn-sm\" (click)=\"onEditProduct(p)\" >Edit</a>\n            </td>\n          </tr>\n      </tbody>\n      </table>\n      <ul *ngIf=\"pages\" class=\"nav nav-pills\">\n        <li class=\"clickable\" [ngClass]=\"i==currentPage?'active':''\" *ngFor=\"let p of pages; let i=index\">\n          <a (click)=\"onPageProduct(i)\">{{i}}</a>\n        </li>\n      </ul>\n    </div>\n  </div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Product } from '../model/product.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CatalogueService {\n\n  public host:string=\"http://localhost:8080\";\n\n  constructor(private httpClient:HttpClient) { }\n\n  public getProducts(page:number,size:number){\n    return this.httpClient.get(this.host+\"/produits?page=\"+page+\"&size=\"+size);\n  }\n\n  public getProductsByKeyword(mc:string,page:number,size:number){\n    return this.httpClient.get(this.host+\"/produits/search/byDesignationPage?mc=\"+mc+\"&page=\"+page+\"&size=\"+size);\n  }\n\n  public deleteResource(url:any){\n    return this.httpClient.delete(url);\n  }\n\n  public saveResource(url:any, data:any):Observable<Product>{\n    return this.httpClient.post<Product>(url,data);\n  }\n\n  public getResource(url:any):Observable<Product>{\n    return this.httpClient.get<Product>(url);\n  }\n\n  public UpdateResource(url:any,data:any):Observable<Product>{\n    return this.httpClient.put<Product>(url,data);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":[],"sourceRoot":"webpack:///"}